==4767== Memcheck, a memory error detector
==4767== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==4767== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==4767== Command: ./crawler mmumullana.org theDir 2
==4767== Parent PID: 2159
==4767== 
--4767-- 
--4767-- Valgrind options:
--4767--    --tool=memcheck
--4767--    --leak-check=full
--4767--    --show-leak-kinds=all
--4767--    --log-file=logfile.txt
--4767--    -v
--4767-- Contents of /proc/version:
--4767--   Linux version 4.4.0-89-generic (buildd@lgw01-18) (gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.4) ) #112-Ubuntu SMP Mon Jul 31 19:38:41 UTC 2017
--4767-- 
--4767-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-rdtscp-sse3-avx
--4767-- Page sizes: currently 4096, max supported 4096
--4767-- Valgrind library directory: /usr/lib/valgrind
--4767-- Reading syms from /home/balwinder1012/WEBCRAWLER/webCrawlerInC/crawler
--4767-- Reading syms from /lib/x86_64-linux-gnu/ld-2.23.so
--4767--   Considering /lib/x86_64-linux-gnu/ld-2.23.so ..
--4767--   .. CRC mismatch (computed 9bc477cd wanted 3da2f12a)
--4767--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.23.so ..
--4767--   .. CRC is valid
--4767-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--4767--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--4767--   .. CRC mismatch (computed eea41ea9 wanted 2009db78)
--4767--    object doesn't have a symbol table
--4767--    object doesn't have a dynamic symbol table
--4767-- Scheduler: using generic scheduler lock implementation.
--4767-- Reading suppressions file: /usr/lib/valgrind/default.supp
==4767== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-4767-by-balwinder1012-on-???
==4767== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-4767-by-balwinder1012-on-???
==4767== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-4767-by-balwinder1012-on-???
==4767== 
==4767== TO CONTROL THIS PROCESS USING vgdb (which you probably
==4767== don't want to do, unless you know exactly what you're doing,
==4767== or are doing some strange experiment):
==4767==   /usr/lib/valgrind/../../bin/vgdb --pid=4767 ...command...
==4767== 
==4767== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==4767==   /path/to/gdb ./crawler
==4767== and then give GDB the following command
==4767==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=4767
==4767== --pid is optional if only one valgrind process is running
==4767== 
--4767-- REDIR: 0x401cf90 (ld-linux-x86-64.so.2:strlen) redirected to 0x3809e181 (???)
--4767-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--4767--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--4767--   .. CRC mismatch (computed 2567ccf6 wanted 49420590)
--4767--    object doesn't have a symbol table
--4767-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--4767--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--4767--   .. CRC mismatch (computed 0e27c9a8 wanted ac585421)
--4767--    object doesn't have a symbol table
==4767== WARNING: new redirection conflicts with existing -- ignoring it
--4767--     old: 0x0401cf90 (strlen              ) R-> (0000.0) 0x3809e181 ???
--4767--     new: 0x0401cf90 (strlen              ) R-> (2007.0) 0x04c31020 strlen
--4767-- REDIR: 0x401b8e0 (ld-linux-x86-64.so.2:index) redirected to 0x4c30bc0 (index)
--4767-- REDIR: 0x401bb00 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c320d0 (strcmp)
--4767-- REDIR: 0x401dcf0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c35270 (mempcpy)
--4767-- Reading syms from /lib/x86_64-linux-gnu/libc-2.23.so
--4767--   Considering /lib/x86_64-linux-gnu/libc-2.23.so ..
--4767--   .. CRC mismatch (computed b2979fac wanted 1affc958)
--4767--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.23.so ..
--4767--   .. CRC is valid
--4767-- REDIR: 0x4ec9a00 (libc.so.6:strcasecmp) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--4767-- REDIR: 0x4ec5280 (libc.so.6:strcspn) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--4767-- REDIR: 0x4ecbcf0 (libc.so.6:strncasecmp) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--4767-- REDIR: 0x4ec76f0 (libc.so.6:strpbrk) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--4767-- REDIR: 0x4ec7a80 (libc.so.6:strspn) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--4767-- REDIR: 0x4ec914b (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--4767-- REDIR: 0x4ec7400 (libc.so.6:rindex) redirected to 0x4c308a0 (rindex)
--4767-- REDIR: 0x4ebe130 (libc.so.6:malloc) redirected to 0x4c2db20 (malloc)
--4767-- REDIR: 0x4ec5160 (libc.so.6:strcpy) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--4767-- REDIR: 0x4edf9d0 (libc.so.6:__strcpy_sse2_unaligned) redirected to 0x4c31040 (strcpy)
--4767-- REDIR: 0x4ec3880 (libc.so.6:strcat) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--4767-- REDIR: 0x4ee27f0 (libc.so.6:__strcat_sse2_unaligned) redirected to 0x4c30c00 (strcat)
--4767-- REDIR: 0x4ebe4f0 (libc.so.6:free) redirected to 0x4c2ed80 (free)
--4767-- REDIR: 0x4ec5720 (libc.so.6:strlen) redirected to 0x4c30f60 (strlen)
--4767-- REDIR: 0x4ed0760 (libc.so.6:strchrnul) redirected to 0x4c34da0 (strchrnul)
--4767-- REDIR: 0x4ec93b0 (libc.so.6:__GI_mempcpy) redirected to 0x4c34fa0 (__GI_mempcpy)
--4767-- REDIR: 0x4ec8060 (libc.so.6:__GI_strstr) redirected to 0x4c354d0 (__strstr_sse2)
--4767-- REDIR: 0x4ece470 (libc.so.6:__GI_memcpy) redirected to 0x4c32b00 (__GI_memcpy)
==4767== Conditional jump or move depends on uninitialised value(s)
==4767==    at 0x401ADE: isBaseCorrect (crawler.c:368)
==4767==    by 0x401CA8: extractTheLinks (crawler.c:394)
==4767==    by 0x402035: crawlItBaby (crawler.c:516)
==4767==    by 0x4022B9: main (crawler.c:569)
==4767== 
==4767== Conditional jump or move depends on uninitialised value(s)
==4767==    at 0x401B5D: isBaseCorrect (crawler.c:373)
==4767==    by 0x401CA8: extractTheLinks (crawler.c:394)
==4767==    by 0x402035: crawlItBaby (crawler.c:516)
==4767==    by 0x4022B9: main (crawler.c:569)
==4767== 
==4767== Conditional jump or move depends on uninitialised value(s)
==4767==    at 0x401ADE: isBaseCorrect (crawler.c:368)
==4767==    by 0x401CA8: extractTheLinks (crawler.c:394)
==4767==    by 0x402035: crawlItBaby (crawler.c:516)
==4767==    by 0x402158: crawlItBaby (crawler.c:545)
==4767==    by 0x4022B9: main (crawler.c:569)
==4767== 
==4767== Conditional jump or move depends on uninitialised value(s)
==4767==    at 0x401B5D: isBaseCorrect (crawler.c:373)
==4767==    by 0x401CA8: extractTheLinks (crawler.c:394)
==4767==    by 0x402035: crawlItBaby (crawler.c:516)
==4767==    by 0x402158: crawlItBaby (crawler.c:545)
==4767==    by 0x4022B9: main (crawler.c:569)
==4767== 
--4767-- REDIR: 0x4ec3cd0 (libc.so.6:strcmp) redirected to 0x4a286f0 (_vgnU_ifunc_wrapper)
--4767-- REDIR: 0x4ed9570 (libc.so.6:__strcmp_sse2_unaligned) redirected to 0x4c31f90 (strcmp)
==4767== 
==4767== HEAP SUMMARY:
==4767==     in use at exit: 0 bytes in 0 blocks
==4767==   total heap usage: 504 allocs, 504 frees, 931,832 bytes allocated
==4767== 
==4767== All heap blocks were freed -- no leaks are possible
==4767== 
==4767== Use --track-origins=yes to see where uninitialised values come from
==4767== ERROR SUMMARY: 32 errors from 4 contexts (suppressed: 0 from 0)
==4767== 
==4767== 1 errors in context 1 of 4:
==4767== Conditional jump or move depends on uninitialised value(s)
==4767==    at 0x401B5D: isBaseCorrect (crawler.c:373)
==4767==    by 0x401CA8: extractTheLinks (crawler.c:394)
==4767==    by 0x402035: crawlItBaby (crawler.c:516)
==4767==    by 0x4022B9: main (crawler.c:569)
==4767== 
==4767== 
==4767== 1 errors in context 2 of 4:
==4767== Conditional jump or move depends on uninitialised value(s)
==4767==    at 0x401ADE: isBaseCorrect (crawler.c:368)
==4767==    by 0x401CA8: extractTheLinks (crawler.c:394)
==4767==    by 0x402035: crawlItBaby (crawler.c:516)
==4767==    by 0x4022B9: main (crawler.c:569)
==4767== 
==4767== 
==4767== 15 errors in context 3 of 4:
==4767== Conditional jump or move depends on uninitialised value(s)
==4767==    at 0x401B5D: isBaseCorrect (crawler.c:373)
==4767==    by 0x401CA8: extractTheLinks (crawler.c:394)
==4767==    by 0x402035: crawlItBaby (crawler.c:516)
==4767==    by 0x402158: crawlItBaby (crawler.c:545)
==4767==    by 0x4022B9: main (crawler.c:569)
==4767== 
==4767== 
==4767== 15 errors in context 4 of 4:
==4767== Conditional jump or move depends on uninitialised value(s)
==4767==    at 0x401ADE: isBaseCorrect (crawler.c:368)
==4767==    by 0x401CA8: extractTheLinks (crawler.c:394)
==4767==    by 0x402035: crawlItBaby (crawler.c:516)
==4767==    by 0x402158: crawlItBaby (crawler.c:545)
==4767==    by 0x4022B9: main (crawler.c:569)
==4767== 
==4767== ERROR SUMMARY: 32 errors from 4 contexts (suppressed: 0 from 0)
